#General system test
"Every line should return Passed"

#Math test
(If (==
	(+ 3 2) # Each of these lines returns 5
	(- 10 5)
	(* 5 1)
	(/ 20 4)
	(% 15 10)
) Passed Fail)

#Building and summing up lists
(If (< (+ (Set list (Seq 1 5))) 20) #{+ 1 2 3 4 5}
Passed Fail)

#Mapping loops and product of a list
(If (* (Map x list (!= x 0)))
Passed Fail)

#Alternate map function
(If (* (MapI x i list (> x i)))
Passed Fail)

#General list modifying
(Join (Remove , (Join (Reverse "e,d" s s a P) ,)))

#Step
(Step (Set start Pass) (Join {start ed}))

#Switch statement
(Switch
	{(== 5 3) Fail1}
	{(> 6 10) Fail2}
	{(!= 3 1) Passed}
	{(< 3 0) Fail3}
	{True Fail4}
)

#Basic user-defined function
(If (== (
	{{x y} (+ x y)}
2 3) 5)
Passed Fail)

#Succesfull recursive function
(If (== ((Set fact {
	{x}
	(If (> x 0)
		(+ x (fact (- x 1)))
		0
	)
}) 4) 10)
Passed Fail)

#Weird formatting test
(If#Testing
1(Join 		 {Pass ed})"Fail"
)

args