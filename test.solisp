#General system test
"Every line should return Passed"

#Math test
(If (==
	(+ 3 2) # Each of these lines returns 5
	(- 10 5)
	(* 5 1)
	(/ 20 4)
	(% 15 10)
) Passed Failed)

#Summing up lists
(If (< (Eval {+ (Set list {1 2 3 4 5})}) 20) #{+ 1 2 3 4 5}
Passed Failed)

#Mapping loops and product of a list
(If (Eval * (Map list i (!= i 0)))
Passed Failed)

#General list modifying
(Join (Remove , (Join (Reverse "e,d" s s a P) ,)))

#Step
(Step (Set start Pass) (Join {start ed}))

#Test nested enviroments
(If (!=
		yes
		(Env (Step {
			(Set yes no)
			yes
		}))
	)
Passed Failed)


#Weird formatting test
(If#Testing
1(Join 		 {Pass ed})"Failed"
)
